import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useState } from 'react'
import LoginModal from '@/components/LoginModal'
import { getSession, signOut, useSession } from 'next-auth/react'
import Link from 'next/link'

function handleSignOut() {
  signOut();
}

export default function Home() {
  const { data: session } = useSession();

  return (
    <>
      <Head>
        <title>Home page</title>
        {/* <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" /> */}
      </Head> 
      {session ? User({session}) : Guest()}
      <main className={styles.main}>
        <h1 className="text-3xl font-bold underline">
          Hello world!
        </h1>
        {session ? null : <LoginModal></LoginModal>}
      </main>
      {/* <LoginModal session={session}></LoginModal> */}
    </>
  )
}
//not login
function Guest() {
  return (
    <main className="container mx-auto text-center py-20">
      <h3 className="text-4xl font-bold">Guest Homepage</h3>
      <div className="flex justify-center">
        <Link href={'/login'} className="mt-5 px-10 py-1 rounded-sm bg-indigo-500 text-gray">
          Sign In
        </Link>
      </div>
    </main>
  )
}
//Authorize User
function User({ session }:any) {
  return (
    <main className="container mx-auto text-center py-20">
      <h3 className="text-4xl font-bold">Authorize Homepage</h3>

      <div className="details">
        <h5>{session.user.name}</h5>
        <h5>{session.user.email}</h5>
      </div>

      <div className="flex justify-center">
        <button className="mt-5 px-10 py-1 rounded-sm bg-indigo-500 bg-gray-50" onClick={handleSignOut}>Sign Out</button>
      </div>

      <div className="flex justify-center">
        <Link href={'/profile'} className="mt-5 px-10 py-1 rounded-sm bg-indigo-500 text-gray">
          Profile Page
        </Link>
      </div>
    </main>
  )
}

export async function getServerSideProps( {req}:any ) {
  const session = await getSession({req});
  
  if(!session) {
    return {
      redirect: {
        destination: "/login",
        permanent: false
      }
    }
  }

  return {
    props: {session}
  }
}